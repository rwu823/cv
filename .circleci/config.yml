version: 2.1

vars:
  branch_master: &branch_master
    filters:
      branches:
        only: master

executors:
  node-browsers:
    environment:
      - TZ: Asia/Taipei
    docker:
      - image: circleci/node:latest-browsers
  node:
    environment:
      - TZ: Asia/Taipei
    docker:
      - image: circleci/node

commands:
    setup_docker:
      steps:
        - setup_remote_docker:
            docker_layer_caching: true

    setup_npm:
      parameters:
        token:
          type: string
          default: $NPM_TOKEN
      steps:
        - run:
            name: Setup NPM
            command: echo "//registry.npmjs.org/:_authToken=<<parameters.token>>" >> ~/.npmrc

    deploy_npm:
      parameters:
        dir:
          type: string
          default: out
      steps:
        - setup_npm
        - run: npm publish << parameters.dir >>

    setup_git:
      parameters:
        user:
          type: string
          default: Rocky Wu
        email :
          type: string
          default : rwu823@gmail.com
      steps:
        - run:
            name: Setup Git
            command: |
              git config --global user.name '<<parameters.user>>'
              git config --global user.email '<<parameters.email>>'

    push_tag:
      parameters:
        tag:
          type: string
          default: $GIT_TAG
        repo:
          type: string
          default: git@github.com:$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git
      steps:
        - setup_git
        - run:
            name: Push git tag << parameters.tag >>
            command: |
              git tag $GIT_TAG
              git push --quiet << parameters.repo >> << parameters.tag >>

    push_branch:
      parameters:
        tag:
          type: string
          default: $GIT_TAG
        dir:
          type: string
          default: out
        repo:
          type: string
          default: git@github.com:$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git
        force:
            type: boolean
            default: false
        branch:
          type: string
          default: $GIT_TAG
        ignore_file:
          type: string
          default: .gitignore
      steps:
        - setup_git
        - run:
            name: Push to << parameters.branch >>
            command: |
              cp << parameters.ignore_file >> << parameters.dir >>
              cd << parameters.dir >>
              git init
              git add -A
              git commit -nm "[ci skip] << parameters.tag >>"

              git checkout -b << parameters.branch >>
              git push --quiet <<# parameters.force >> -f <</ parameters.force >> << parameters.repo >> HEAD

              rm -rf .git
    init:
      parameters:
        no_module:
          type: boolean
          default: false
      description: Checkout sources and install node_modules
      steps:
        - checkout
        - restore_cache:
            key: node_modules#{{ checksum "yarn.lock" }}
        - run: yarn
        - unless:
            condition: << parameters.no_module >>
            steps:
              - save_cache:
                  key: node_modules#{{ checksum "yarn.lock" }}
                  paths:
                    - node_modules
        - run: git checkout -- .
        - run:
            name: Init Submodule
            command: git submodule update --init --remote --depth 1
        # - run:
        #     name: Decrypt Secret
        #     command: |
        #       sudo apt-get -y -qq update
        #       sudo apt-get install bsdmainutils
        #       yarn --silent transcrypt -p "$REPO_SECRET" -y
        - run:
            name: Exports Env
            command: |
              git clone git@github.com:rwu823/env.git --depth 1
              echo "$(node env/export)" >> $BASH_ENV
              echo 'export PATH="$(yarn global bin):$PATH"' >> $BASH_ENV

              source $BASH_ENV

jobs:
  build:
    executor: node
    steps:
      - init
      - run:
          name: build
          command: |
            yarn build
            echo "{ \"sha1\": \"$CIRCLE_SHA1\"}" > out/info
      - push_branch:
          force: true
          dir: out
          branch: gh-pages


  lint:
    executor: node
    steps:
      - init
      - run:
          name: Run ESLint only on modified files.
          command: npx eslint $(git diff --diff-filter=d origin/HEAD --name-only --cached '*.ts' '*.tsx' '*.js')

workflows:
  version: 2

  Base:
    jobs:
      - lint:
          <<: *branch_master
      - build:
          requires:
            - lint
          <<: *branch_master
